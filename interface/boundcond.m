function boundcond;
%Z. Li
%July, 2010
%Preprocessor screen of boundary and longitudinal term input for finite strip analysis
%Februry 2017, java script commands causing bombs on some PCs, bws
%simplifying code to try to fix
%
%general
global fig screen prop node elem lengths curve shapes clas springs constraints GBTcon BC m_all neigs version screen zoombtn panbtn rotatebtn
%output from pre2
global subfig ed_prop ed_node ed_elem ed_lengths axestop screen flags modeflag ed_springs ed_constraints
%output from template
global prop node elem lengths springs constraints h_tex b1_tex d1_tex q1_tex b2_tex d2_tex q2_tex r1_tex r2_tex r3_tex r4_tex t_tex C Z kipin Nmm axestemp subfig
%output from propout and loading
global A xcg zcg Ixx Izz Ixz thetap I11 I22 Cw J outfy_tex unsymm restrained Bas_Adv scale_w Xs Ys w scale_tex_w outPedit outMxxedit outMzzedit outM11edit outM22edit outTedit outBedit outL_Tedit outx_Tedit Pcheck Mxxcheck Mzzcheck M11check M22check Tcheck screen axesprop axesstres scale_tex maxstress_tex minstress_tex
%output from boundary condition (Bound. Cond.)
global ed_m ed_neigs solutiontype togglesignature togglegensolution popup_BC toggleSolution Plengths Pm_all Hlengths Hm_all HBC PBC subfig lengthindex axeslongtshape longitermindex hcontainershape txt_longterm len_cur len_longterm longshape_cur jScrollPane_edm jViewPort_edm jEditbox_edm hjScrollPane_edm
%output from cFSM
global toggleglobal toggledist togglelocal toggleother ed_global ed_dist ed_local ed_other NatBasis ModalBasis toggleCouple popup_load axesoutofplane axesinplane axes3d lengthindex modeindex spaceindex longitermindex b_v_view modename spacename check_3D cutface_edit len_cur mode_cur space_cur longterm_cur modes SurfPos scale twod threed undef scale_tex
%output from compareout
global pathname filename pathnamecell filenamecell propcell nodecell elemcell lengthscell curvecell clascell shapescell springscell constraintscell GBTconcell solutiontypecell BCcell m_allcell filedisplay files fileindex modes modeindex mmodes mmodeindex lengthindex axescurve togglelfvsmode togglelfvslength curveoption ifcheck3d minopt logopt threed undef axes2dshapelarge togglemin togglelog modestoplot_tex filetoplot_tex modestoplot_title filetoplot_title checkpatch len_plot lf_plot mode_plot SurfPos cutsurf_tex filename_plot len_cur scale_tex mode_cur mmode_cur file_cur xmin_tex xmax_tex ymin_tex ymax_tex filetoplot_tex screen popup_plot filename_title2 clasopt popup_classify times_classified toggleclassify classification_results plength_cur pfile_cur togglepfiles toggleplength mlengthindex mfileindex axespart_title axes2dshape axes3dshape axesparticipation axescurvemode  modedisplay modestoplot_tex
%
clf;
name=['CUFSM v',version,' -- Finite Strip Pre-Processor -- Boundary Conditions Input'];
set(fig,'Name',name);
%-------------------------------------------------------------------------
screen=6;
commandbar;
%
%initial values
if ~isempty(Hlengths)&~isempty(Hm_all)&~isempty(HBC)&~isempty(Plengths)&~isempty(Pm_all)&~isempty(PBC)&~isempty(solutiontype)
    %Do nothing...
    %I am not gonna assign temporary variables.
    if ~isempty(lengths)&~isempty(BC)&~isempty(m_all)
        for j=1:max(size(m_all))
            if length(m_all{j})==1&m_all{j}==m_all{1}
                isolutiontype=1;
            else
                isolutiontype=2;
                break;
            end
        end
        if isolutiontype==1
            Hlengths=lengths;
            Hm_all=m_all;
            HBC=BC;
            
            if exist('Plengths')<1
                %general bc solution initial values
                Plengths=[92 192];
                for i=1:length(Plengths)
                    Pm_all{i}=[1:20];
                end
                PBC='S-S';
            end
        elseif isolutiontype==2
            Plengths=lengths;
            Pm_all=m_all;
            PBC=BC;
            
            if exist('Hlengths')<1
                %signature curve initial values
                Hlengths=[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 20 30 40 50 60 70 80 90 100 200 300 400 500 600 700 800 900 1000];
                for i=1:length(Hlengths)
                    Hm_all{i}=[1];
                end
                HBC='S-S';
            end
        end
        if exist('solutiontype')<1
            solutiontype=isolutiontype;
        end
        if ~isempty(neigs)
            neigs=20;
        end
    end
else
    %Default Initial Values for the editable areas
    Hlengths=[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 20 30 40 50 60 70 80 90 100 200 300 400 500 600 700 800 900 1000];
    for i=1:length(Hlengths)
        Hm_all{i}=[1];
    end
    HBC='S-S';
    neigs=20;
    solutiontype=1;        
    %
    Plengths=[92 192];
    for i=1:length(Plengths)
        Pm_all{i}=[1:20];
    end
    PBC='S-S';
    %
end

% GUI
upperframe=uicontrol(fig,...
    'Style','frame','units','normalized',...
    'Position',[0.0 0.9 0.51 0.05]);
title=uicontrol(fig,...
    'Style','text','units','normalized',...
    'HorizontalAlignment','center',...
    'FontName','Arial','FontSize',13,...
    'Position',[0.01 0.91 0.49 0.03],...
    'String','Boundary Condition Selection');
% B.C. inputs
box=uicontrol(fig,...
    'Style','frame','units','normalized',...
    'Position',[0.0 0.0 0.51 0.9]);

%--------------------------------------------------------------------------
% check for the solution types
solutiontxt=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.01 0.84 0.1 0.04],...
    'HorizontalAlignment','Left',...
    'FontName','Arial','FontSize',13,...
    'String','Solution type: ');
togglesignature=uicontrol(fig,...
    'Style','radio','units','normalized',...
    'Position',[0.01 0.80 0.22 0.04],...
    'FontName','Arial','FontSize',11,...
    'String','Signature curve (traditional)',...
    'Value',1,...
    'Callback',[...
    'boundcond_cb(1);']);
togglegensolution=uicontrol(fig,...
    'Style','radio','units','normalized',...
    'Position',[0.23 0.80 0.26 0.04],...
    'FontName','Arial','FontSize',11,...
    'Value',0,...
    'String','General boundary condition solution',...
    'Callback',[...
    'boundcond_cb(2);']);
if solutiontype==1
    set(togglesignature,'Value',1);
    set(togglegensolution,'Value',0);
elseif solutiontype==2
    set(togglesignature,'Value',0);
    set(togglegensolution,'Value',1);
end
%

%Boundary condition and eigenvalue option
%boundary condition
txt_BC=uicontrol(fig,...
    'Style','text','units','normalized',...
    'FontName','Arial','FontSize',13,...
    'Position',[0.01 0.74 0.2 0.04],...
    'HorizontalAlignment','Left',...
    'String','Boundary Conditions');
popup_BC=uicontrol(fig,...
    'Style','popup','units','normalized',...
    'Position',[0.3 0.74 0.16 0.04],...
    'String','simple-simple (S-S)|clamped-clamped (C-C)|simple-clamped (S-C)|clamped-free (C-F)|clamped-guided (C-G)',...
    'Value',1,...
    'Callback',[...
    'boundcond_cb(3);']);
if solutiontype==1
    if strcmp(HBC,'S-S')
        set(popup_BC,'Value',1);
    elseif strcmp(HBC,'C-C')
        set(popup_BC,'Value',2);
    elseif strcmp(HBC,'S-C')|strcmp(HBC,'C-S')
        set(popup_BC,'Value',3);
    elseif strcmp(HBC,'C-F')|strcmp(HBC,'F-C')
        set(popup_BC,'Value',4);
    elseif strcmp(HBC,'C-G')|strcmp(HBC,'G-C')
        set(popup_BC,'Value',5);
    end
else
    if strcmp(PBC,'S-S')
        set(popup_BC,'Value',1);
    elseif strcmp(PBC,'C-C')
        set(popup_BC,'Value',2);
    elseif strcmp(PBC,'S-C')|strcmp(PBC,'C-S')
        set(popup_BC,'Value',3);
    elseif strcmp(PBC,'C-F')|strcmp(PBC,'F-C')
        set(popup_BC,'Value',4);
    elseif strcmp(PBC,'C-G')|strcmp(PBC,'G-C')
        set(popup_BC,'Value',5);
    end
end
%number of eigenvalues
txt_neigs=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.01 0.70 0.23 0.04],...
    'HorizontalAlignment','Left',...
    'FontName','Arial','FontSize',13,...
    'String','Number of eigenvalues');
ed_neigs=uicontrol(fig,...
    'Style','edit','units','normalized',...
    'HorizontalAlignment','Left',...
    'String',num2str(neigs),...
    'Position',[0.3 0.70 0.16 0.04],...
    'Max',1,...
    'Callback',[...
    'boundcond_cb(4);']);
%

%lengths and longitudinal terms
if solutiontype==1
    title_m=uicontrol(fig,...
        'Style','text','units','normalized',...
        'HorizontalAlignment','Left',...
        'FontName','Arial','FontSize',12,...
        'Position',[0.01 0.62 0.48 0.04],...
        'String','Half-wavelengths and Default longitudinal term m=1');
    txt_m=uicontrol(fig,...
        'Style','text','units','normalized',...
        'Position',[0.01 0.59 0.48 0.03],...
        'HorizontalAlignment','Left',...
        'String','Length');
elseif solutiontype==2
    title_m=uicontrol(fig,...
        'Style','text','units','normalized',...
        'HorizontalAlignment','Left',...
        'FontName','Arial','FontSize',12,...
        'Position',[0.01 0.62 0.48 0.04],...
        'String','Lengths and Longitudinal terms');
    txt_m=uicontrol(fig,...
        'Style','text','units','normalized',...
        'Position',[0.01 0.59 0.48 0.03],...
        'HorizontalAlignment','Left',...
        'String','Length | 1  |  2  |  3  |  ...  |  m');
end

ed_m=uicontrol(fig,...
    'Style','edit','units','normalized',...
    'HorizontalAlignment','Left',...
    'SelectionHighlight','on',...
    'Position',[0.01 0.02 0.49 0.57],...
    'Max',1000,...
    'Callback',[...
    'boundcond_cb(5);']);
%
if solutiontype==1
%     set(ed_m,'String',num2str(Hlengths'),'HorizontalAlignment','Left');
    set(ed_m,'String',sprintf('%.2f\n',Hlengths'));
elseif solutiontype==2
    len_w_m=[];len_w_m_str=[];
    for i=1:length(Plengths)
        len_w_m{i}=[Plengths(i) Pm_all{i}];
        len_w_m_str{i}=num2str(len_w_m{i});
    end
    set(ed_m,'String',len_w_m_str);
end
%
%February 2017 comment out this java control it is causing errors on PCs
% % Java control: to show the horizontal scroll bar
% % Get the Java scroll-pane container reference
% jScrollPane_edm = findjobj(ed_m);
% % Modify the scroll-pane's scrollbar policies
% % (note the equivalent alternative methods used below)
% set(jScrollPane_edm,'VerticalScrollBarPolicy',20);  % or: jScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED
% set(jScrollPane_edm,'HorizontalScrollBarPolicy',30);  % or: jScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED
% % jScrollPane.setHorizontalScrollBarPolicy(32);  % or: jScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED
% jViewPort_edm = jScrollPane_edm.getViewport;
% jEditbox_edm = jViewPort_edm.getComponent(0);
% jEditbox_edm.setWrapping(false);  % do *NOT* use set(...)!!!
% % newPolicy = jScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED;
% set(jScrollPane_edm,'HorizontalScrollBarPolicy',30);
% % %
% cbStr_edm = sprintf('set(jScrollPane_edm,''HorizontalScrollBarPolicy'',%d)',30);
% hjScrollPane_edm = handle(jScrollPane_edm,'CallbackProperties');
% set(hjScrollPane_edm,'ComponentResizedCallback',cbStr_edm);

% suggestion of the longitudinal terms for physical lengths
if solutiontype==2
    halfwlbring=uicontrol(fig,...
        'Style','push','units','normalized',...
        'Position',[0.17 0.59 0.11 0.04],...
        'String','Bring sign. curve L',...
        'Tooltip','Bring the half-wavelengths of signature curve and the associated longitudinal terms ',...
        'Callback',[...
        'boundcond_cb(10);']);
    mallsame=uicontrol(fig,...
        'Style','push','units','normalized',...
        'Position',[0.28 0.59 0.11 0.04],...
        'String','Set m for all lengths',...
        'Tooltip','Select to input longitudinal terms for all lengths',...
        'Callback',[...
        'boundcond_cb(11);']);
    mall_sug=uicontrol(fig,...
        'Style','push','units','normalized',...
        'Position',[0.39 0.59 0.11 0.04],...
        'String','Recommend m',...
        'Tooltip','Select to use the longitudinal terms suggested for each length',...
        'Callback',[...
        'boundcond_cb(12);']);
end
%--------------------------------------------------------------------

%
%longitudinal shape function illustation
lowerframe=uicontrol(fig,...
    'Style','frame','units','normalized',...
    'Position',[0.51 0.9 0.49 0.05]);
title=uicontrol(fig,...
    'Style','text','units','normalized',...
    'HorizontalAlignment','center',...
    'FontName','Arial','FontSize',13,...
    'Position',[0.52 0.91 0.47 0.03],...
    'String','Longitudinal Shape Function Viewer');

box=uicontrol(fig,...
    'Style','frame','units','normalized',...
    'Position',[0.51 0.48 0.49 0.42]);
%DEFINE THE AXIS THAT WILL BE USED FOR THE PLOT
axeslongtshape=axes('Units','normalized','Position',[0.52 0.02 0.47 0.4],'visible','off');

%initial value
lengthindex=1;
longitermindex=1;
%longitudinal terms
long_txt=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.52 0.70 0.47 0.05],...
    'FontName','Arial','FontSize',13,...
    'HorizontalAlignment','Center',...
    'String','longitudinal terms');

if solutiontype==1
    txt_longterm=uicontrol(fig,...
    'Style','edit','units','normalized',...
    'Position',[0.52 0.66 0.47 0.05],...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'String',num2str(Hm_all{lengthindex}));
    len_longterm=uicontrol(fig,...
        'Style','text','units','normalized',...
        'Position',[0.58 0.485 0.35 0.05],...
        'HorizontalAlignment','Center',...
        'FontWeight','bold',...
        'String',['m = ',num2str(Hm_all{lengthindex}(longitermindex))]);
else
    txt_longterm=uicontrol(fig,...
    'Style','edit','units','normalized',...
    'Position',[0.52 0.66 0.47 0.05],...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'String',num2str(Pm_all{lengthindex}));
    len_longterm=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.58 0.485 0.35 0.05],...
    'HorizontalAlignment','Center',...
    'FontWeight','bold',...
    'String',['m = ',num2str(Pm_all{lengthindex}(longitermindex))]);
end
uplongiterm=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.83 0.5 0.05 0.05],...
    'fontname','symbol',...
    'String',setstr(hex2dec('ae')),...
    'Callback',[...
    'boundcond_cb(21);']);
downlongiterm=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.63 0.5 0.05 0.05],...
    'fontname','symbol',...
    'String',setstr(hex2dec('ac')),...
    'Callback',[...
    'boundcond_cb(22);']);
%lengths
len_txt=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.52 0.84 0.47 0.05],...
    'FontName','Arial','FontSize',13,...
    'HorizontalAlignment','Center',...
    'String','lengths');
if solutiontype==1
    len_cur=uicontrol(fig,...
        'Style','text','units','normalized',...
        'Position',[0.58 0.765 0.35 0.05],...
        'HorizontalAlignment','Center',...
        'FontWeight','bold',...
        'String',['length = ',num2str(Hlengths(lengthindex))]);
elseif solutiontype==2
    len_cur=uicontrol(fig,...
        'Style','text','units','normalized',...
        'Position',[0.58 0.765 0.35 0.05],...
        'HorizontalAlignment','Center',...
        'FontWeight','bold',...
        'String',['length = ',num2str(Plengths(lengthindex))]);
end
uplength=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.83 0.78 0.05 0.05],...
    'fontname','symbol',...
    'String',setstr(hex2dec('ae')),...
    'Callback',[...
    'boundcond_cb(23);']);
downlength=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.63 0.78 0.05 0.05],...
    'fontname','symbol',...
    'String',setstr(hex2dec('ac')),...
    'Callback',[...
    'boundcond_cb(24);']);

shapeplotupdate=uicontrol(fig,...
    'Style','text','units','normalized',...
    'Position',[0.55 0.56 0.4 0.05],...
    'HorizontalAlignment','Center',...
    'FontName','Arial','FontSize',13,...
    'String','Highlight the shape of selected longitudinal term');

%shape function on the plot
if solutiontype==1
    HPlengths=Hlengths;
    HPm_all=Hm_all;
    HPBC=HBC;
else
    HPlengths=Plengths;
    HPm_all=Pm_all;
    HPBC=PBC;
end
if strcmp(HPBC,'S-S')
    labelStrshape = ['Y_{\itm} = sin({\itm}\piy/L), \color{red}{\itm}=', num2str(HPm_all{lengthindex}(longitermindex))];   
elseif strcmp(HPBC,'C-C')
    labelStrshape = ['Y_{\itm} = sin({\itm}\piy/L)sin(\piy/L), \color{red}{\itm}=', num2str(HPm_all{lengthindex}(longitermindex))]; 
elseif strcmp(HPBC,'S-C')|strcmp(HPBC,'C-S')
    labelStrshape = ['Y_{\itm} = sin[({\itm+1})\piy/L]+({\itm+1})sin({\itm}\piy/L)/{\itm}, \color{red}{\itm}=', num2str(HPm_all{lengthindex}(longitermindex))]; 
elseif strcmp(HPBC,'C-F')|strcmp(HPBC,'F-C')
    labelStrshape = ['Y_{\itm} = 1-cos[({\itm-0.5})\piy/L], \color{red}{\itm}=', num2str(HPm_all{lengthindex}(longitermindex))]; 
elseif strcmp(HPBC,'C-G')|strcmp(HPBC,'G-C')
    labelStrshape = ['Y_{\itm} = sin[({\itm-0.5})\piy/L]sin(\piy/L/2), \color{red}{\itm}=', num2str(HPm_all{lengthindex}(longitermindex))]; 
end
% jLabelshape = javaObjectEDT('javax.swing.JLabel',labelStrshape);
% [hcomponentshape,hcontainershape] = javacomponent(jLabelshape,[],fig);
% set(hcontainershape,'units','normalized','position',[0.63 0.44 0.27 0.03]);
hcontainershape=axes('Units','normalized','Position',[0.52 0.44 0.48 0.03],'visible','off');
axes(hcontainershape)
cla
text('Interpreter','tex',...
 'String',labelStrshape,...
 'HorizontalAlignment','center',... 
 'position',[0.5,0.5],...
 'FontSize',12)
%initial the longitudinal shape plot
axes(axeslongtshape);
cla;
x_length=[0:HPlengths(lengthindex)/200:HPlengths(lengthindex)];
plot([0 HPlengths(lengthindex)],[0 0],'y','LineWidth',8);hold on
for i=1:length(HPm_all{lengthindex})
    x_lengths(i,:)= x_length;
    if strcmp(HPBC,'S-S')
        y_shapes(i,:)=sin(HPm_all{lengthindex}(i)*pi*x_length/HPlengths(lengthindex));
    elseif strcmp(HPBC,'C-C')
        y_shapes(i,:)=sin(HPm_all{lengthindex}(i)*pi*x_length/HPlengths(lengthindex)).*sin(pi*x_length/HPlengths(lengthindex));
    elseif strcmp(HPBC,'S-C')|strcmp(HPBC,'C-S')
        y_shapes(i,:)=sin((HPm_all{lengthindex}(i)+1)*pi*x_length/HPlengths(lengthindex))+(HPm_all{lengthindex}(i)+1)*sin(HPm_all{lengthindex}(i)*pi*x_length/HPlengths(lengthindex))/HPm_all{lengthindex}(i);
    elseif strcmp(HPBC,'C-F')|strcmp(HPBC,'F-C')
        y_shapes(i,:)=1-cos((HPm_all{lengthindex}(i)-0.5)*pi*x_length/HPlengths(lengthindex));
    elseif strcmp(HPBC,'C-G')|strcmp(HPBC,'G-C')
        y_shapes(i,:)=sin((HPm_all{lengthindex}(i)-0.5)*pi*x_length/HPlengths(lengthindex)).*sin(pi*x_length/HPlengths(lengthindex)/2);
    end
    legendm(i)=plot(x_lengths(i,:),y_shapes(i,:),'b-');hold on
end
set(legendm(longitermindex),'Color','r','LineWidth',4);hold on
axis off

%------------------------------------------------------------------
%--------------------------------------------------------------------
%HELP
btn_solutiontypehelp=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.46 0.85 0.04 0.04],...
    'String','?',...
    'Callback',[...
    'web(''interface/cufsmhelp.html#61'');']);
btn_BC=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.46 0.745 0.04 0.04],...
    'String','?',...
    'Callback',[...
    'web(''interface/cufsmhelp.html#62'');']);
btn_neigs=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.46 0.70 0.04 0.04],...
    'String','?',...
    'Callback',[...
    'web(''interface/cufsmhelp.html#63'');']);
btn_lengths_longterm=uicontrol(fig,...
    'Style','push','units','normalized',...
    'Position',[0.46 0.63 0.04 0.04],...
    'String','?',...
    'Callback',[...
    'web(''interface/cufsmhelp.html#64'');']);


